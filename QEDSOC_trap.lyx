#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass paper
\begin_preamble
\def\pa{\partial}
\def\r{\textbf{r}}
\def\k{\textbf{k}}
\def\q{\textbf{q}}
\def\p{\textbf{p}}
\def\R{\textbf{R}}
\def\s{\sigma}
\def\u{\uparrow}
\def\d{\downarrow}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type numerical
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 0.5in
\topmargin 0.5in
\rightmargin 0.5in
\bottommargin 1.2in
\headsep 0.2in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Quantum version of the model in a trap
\end_layout

\begin_layout Author
Lin Dong, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We can write the 1D atom-cavity Hamiltonian in a hamonic trap as, 
\begin_inset Formula 
\begin{eqnarray}
\mathcal{H}_{\text{eff}} & = & \int dz\left(\begin{array}{cc}
\psi_{\uparrow}^{\dagger}(z) & \psi_{\downarrow}^{\dagger}(z)\end{array}\right)\left[\frac{\hbar^{2}k_{z}^{2}}{2m}+\frac{1}{2}m\omega^{2}z^{2}+\frac{\hbar^{2}}{m}q_{r}k_{z}\sigma_{z}+\delta\sigma_{z}\right]\left(\begin{array}{c}
\psi_{\uparrow}(z)\\
\psi_{\downarrow}(z)
\end{array}\right)\nonumber \\
 & + & \int dz\frac{\Omega}{2}\psi_{\uparrow}^{\dagger}(z)\psi_{\downarrow}(z)c+\int dz\frac{\Omega}{2}c^{\dagger}\psi_{\downarrow}^{\dagger}(z)\psi_{\uparrow}(z)\nonumber \\
 & + & i\varepsilon_{p}(c^{\dagger}-c)-\hbar\delta_{c}c^{\dagger}c.
\end{eqnarray}

\end_inset

Dissipation process is modeled by Liouvillean term 
\begin_inset Formula $\mathcal{L}$
\end_inset

 appearing in the master equation, 
\begin_inset Formula 
\begin{equation}
\dot{\rho}=\frac{1}{i\hbar}[\mathcal{H}_{\text{eff}},\rho]+\mathcal{L}\rho\label{eq:rho_master}
\end{equation}

\end_inset

where 
\begin_inset Formula 
\begin{equation}
\mathcal{L}\rho=\kappa(2c\rho c^{\dagger}-c^{\dagger}c\rho-\rho c^{\dagger}c).
\end{equation}

\end_inset

Then, we write the commutator explicitly as, 
\begin_inset Formula 
\begin{eqnarray*}
[\mathcal{H}_{\text{eff}},\rho] & = & \int dz\psi_{\uparrow}^{\dagger}(z)\left(\frac{k_{z}^{2}}{2m}+\frac{1}{2}m\omega^{2}z^{2}+\frac{q_{r}k_{z}}{m}+\delta\right)\psi_{\uparrow}(z)\rho-\int dz\rho\psi_{\uparrow}^{\dagger}(z)\left(\frac{k_{z}^{2}}{2m}+\frac{1}{2}m\omega^{2}z^{2}+\frac{q_{r}k_{z}}{m}+\delta\right)\psi_{\uparrow}(z)\\
 & + & \int dz\psi_{\downarrow}^{\dagger}(z)\left(\frac{k_{z}^{2}}{2m}+\frac{1}{2}m\omega^{2}z^{2}-\frac{q_{r}k_{z}}{m}-\delta\right)\psi_{\downarrow}(z)\rho-\int dz\rho\psi_{\downarrow}^{\dagger}(z)\left(\frac{k_{z}^{2}}{2m}+\frac{1}{2}m\omega^{2}z^{2}-\frac{q_{r}k_{z}}{m}-\delta\right)\psi_{\downarrow}(z)\\
 & + & \frac{\Omega}{2}\int dz\left(\psi_{\uparrow}^{\dagger}(z)\psi_{\downarrow}(z)c\rho+c^{\dagger}\psi_{\downarrow}^{\dagger}(z)\psi_{\uparrow}(z)\rho-\rho\psi_{\uparrow}^{\dagger}(z)\psi_{\downarrow}(z)c-\rho c^{\dagger}\psi_{\downarrow}^{\dagger}(z)\psi_{\uparrow}(z)\right)\\
 & + & i\varepsilon_{p}\left(c^{\dagger}\rho-c\rho-\rho c^{\dagger}+\rho c\right)-\delta_{c}\left(c^{\dagger}c\rho-\rho c^{\dagger}c\right).
\end{eqnarray*}

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
To this end, we choose our basis states as 
\begin_inset Formula $|n;i,j\rangle$
\end_inset

, where 
\begin_inset Formula $n$
\end_inset

 can be 
\begin_inset Formula $0,1,2,...$
\end_inset

 and slot 
\begin_inset Formula $i$
\end_inset

 refers to occupation number of 
\begin_inset Formula $\uparrow$
\end_inset

 and slot 
\begin_inset Formula $j$
\end_inset

 refers to occupation number of 
\begin_inset Formula $\downarrow$
\end_inset

, under the assumption that 
\begin_inset Formula $i+j=1$
\end_inset

.
 Namely, there are only two possibilities, each 
\begin_inset Formula $|n;1,0\rangle$
\end_inset

 or 
\begin_inset Formula $|n;0,1\rangle$
\end_inset

.
 Our goal is to calculate matrix elements of density operator under this
 basis, 
\begin_inset Formula $\langle m;i',j'|\rho|n;i,j\rangle$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
To this end, we choose our basis states as 
\begin_inset Formula $|n;q,\sigma\rangle$
\end_inset

 where 
\begin_inset Formula $n=0,1,2,...N$
\end_inset

 and 
\begin_inset Formula $N$
\end_inset

 is the truncation number of photon, 
\begin_inset Formula $q=0,1,2,...Q$
\end_inset

 and 
\begin_inset Formula $Q$
\end_inset

 is the truncation number of harmonic oscillator energy levels and 
\begin_inset Formula $\sigma=\uparrow,\downarrow$
\end_inset

.
 Our goal is to calculate matrix elements of density operator under this
 basis 
\begin_inset Formula $\langle m;p,\sigma|\rho|n;q,\sigma'\rangle\equiv\rho_{mn}^{p\sigma q\sigma'}$
\end_inset

.
 Rules for creation and annilation operators are 
\begin_inset Formula 
\begin{eqnarray*}
c|n;q,\sigma'\rangle & = & \sqrt{n}|n-1;q,\sigma'\rangle,\quad c^{\dagger}|n;q,\sigma'\rangle=\sqrt{n+1}|n+1;q,\sigma'\rangle\\
\langle m;q,\sigma|c & = & \sqrt{m+1}\langle m+1;q,\sigma|,\langle m;q,\sigma|c^{\dagger}=\sqrt{m}\langle m-1;q,\sigma|.
\end{eqnarray*}

\end_inset

We write field operator 
\begin_inset Formula $\psi_{\sigma}(z)=\sum_{q=1}^{Q}\varphi_{q}(z)a_{q\sigma}$
\end_inset

 in second quantization, where 
\begin_inset Formula $\varphi_{q}(z)$
\end_inset

 is the eigenstate wavefunction of harmonic oscillator.
 Also, 
\begin_inset Formula $k_{z}=-i\frac{\partial}{\partial z}$
\end_inset

 serves as first quantization and only operates on wavefunction 
\begin_inset Formula $\varphi_{p}(z)$
\end_inset

.
 For arbitrary state, we have (where we have chosen trap unit by setting
 
\begin_inset Formula $\hbar=m=\omega=1$
\end_inset

 )
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Formula 
\begin{eqnarray}
\frac{d}{dt}\rho_{mn}^{p\sigma q\sigma'} & = & \frac{h_{1}}{i}\left(\delta_{\sigma\uparrow}-\delta_{\sigma'\uparrow}\right)\rho_{mn}^{\sigma\sigma'}+\frac{h_{2}}{i}\left(\delta_{\sigma\downarrow}-\delta_{\sigma'\downarrow}\right)\rho_{mn}^{\sigma\sigma'}\\
 & + & \frac{\Omega}{2i}\left(\delta_{\sigma\uparrow}\sqrt{m+1}\rho_{m+1n}^{\bar{\sigma}\sigma'}+\delta_{\sigma\downarrow}\sqrt{m}\rho_{m-1n}^{\bar{\sigma}\sigma'}-\delta_{\sigma'\uparrow}\sqrt{n+1}\rho_{mn+1}^{\sigma\bar{\sigma'}}-\delta_{\sigma'\downarrow}\sqrt{n}\rho_{mn-1}^{\sigma\bar{\sigma'}}\right)\\
 & + & \varepsilon_{p}\left(\sqrt{m}\rho_{m-1n}^{\sigma\sigma'}-\sqrt{m+1}\rho_{m+1n}^{\sigma\sigma'}+\sqrt{n}\rho_{mn-1}^{\sigma\sigma'}-\sqrt{n+1}\rho_{mn+1}^{\sigma\sigma'}\right)\\
 & - & \frac{\delta_{c}}{i}\left(m-n\right)\rho_{mn}^{\sigma\sigma'}\\
 & + & \kappa\left(2\sqrt{m+1}\sqrt{n+1}\rho_{m+1n+1}^{\sigma\sigma'}-(m+n)\rho_{mn}^{\sigma\sigma'}\right)
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $h_{1}=\frac{k^{2}}{2}+q_{r}k+\tilde{\delta}$
\end_inset

, 
\begin_inset Formula $h_{2}=\frac{k^{2}}{2}-q_{r}k-\tilde{\delta}$
\end_inset

, and 
\begin_inset Formula $\bar{\sigma}$
\end_inset

 represents the flip-spin value, for instance 
\begin_inset Formula $\bar{\uparrow}=\downarrow$
\end_inset

, 
\begin_inset Formula $\bar{\downarrow}=\uparrow$
\end_inset

 .
 
\end_layout

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Formula 
\begin{eqnarray*}
 & \langle m;\sigma|\frac{1}{i\hbar}\left[i\varepsilon_{p}\left(c^{\dagger}\rho-c\rho-\rho c^{\dagger}+\rho c\right)-\delta_{c}\left(c^{\dagger}c\rho-\rho c^{\dagger}c\right)\right]+\kappa(2c\rho c^{\dagger}-c^{\dagger}c\rho-\rho c^{\dagger}c)|n;\sigma'\rangle & =\\
 & \frac{1}{i\hbar}i\varepsilon_{p}\left(\sqrt{m}\langle m-1;\sigma|\rho|n;\sigma'\rangle-\sqrt{m+1}\langle m+1;\sigma|\rho|n;\sigma'\rangle-\sqrt{n+1}\langle m;\sigma|\rho|n+1;\sigma'\rangle+\sqrt{n}\langle m;\sigma|\rho|n-1;\sigma'\rangle\right)\\
 & -\frac{1}{i\hbar}\delta_{c}\left(m-n\right)\langle m;\sigma|\rho|n;\sigma'\rangle+\kappa\left(2\sqrt{m+1}\sqrt{n+1}\langle m+1;\sigma|\rho|n+1;\sigma'\rangle-(m+n)\langle m;\sigma|\rho|n;\sigma'\rangle\right)
\end{eqnarray*}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Explicitly, and without loss of generality, the matrix elements are,
\begin_inset Formula 
\begin{eqnarray}
\frac{d}{dt}\langle m;\uparrow|\rho|n;\uparrow\rangle & = & \frac{1}{i\hbar}\frac{\Omega}{2}\left(\sqrt{m+1}\langle m+1;\downarrow|\rho|n;\uparrow\rangle-\sqrt{n+1}\langle m;\uparrow|\rho|n+1;\downarrow\rangle\right)\nonumber \\
 & + & \frac{1}{i\hbar}i\varepsilon_{p}\left(\sqrt{m}\langle m-1;\uparrow|\rho|n;\uparrow\rangle-\sqrt{m+1}\langle m+1;\uparrow|\rho|n;\uparrow\rangle-\sqrt{n+1}\langle m;\uparrow|\rho|n+1;\uparrow\rangle+\sqrt{n}\langle m;\uparrow|\rho|n-1;\uparrow\rangle\right)\nonumber \\
 & - & \frac{1}{i\hbar}\delta_{c}\left(m-n\right)\langle m;\uparrow|\rho|n;\uparrow\rangle\nonumber \\
 & + & \kappa\left(2\sqrt{m+1}\sqrt{n+1}\langle m+1;\uparrow|\rho|n+1;\uparrow\rangle-(m+n)\langle m;\uparrow|\rho|n;\uparrow\rangle\right)\\
\frac{d}{dt}\langle m;\downarrow|\rho|n;\downarrow\rangle & = & \frac{1}{i\hbar}\frac{\Omega}{2}\left(\sqrt{m}\langle m-1;\uparrow|\rho|n;\downarrow\rangle-\sqrt{n}\langle m;\downarrow|\rho|n-1;\uparrow\rangle\right)\nonumber \\
 & + & \frac{1}{i\hbar}i\varepsilon_{p}\left(\sqrt{m}\langle m-1;\downarrow|\rho|n;\downarrow\rangle-\sqrt{m+1}\langle m+1;\downarrow|\rho|n;\downarrow\rangle-\sqrt{n+1}\langle m;\downarrow|\rho|n+1;\downarrow\rangle+\sqrt{n}\langle m;\downarrow|\rho|n-1;\downarrow\rangle\right)\nonumber \\
 & - & \frac{1}{i\hbar}\delta_{c}\left(m-n\right)\langle m;\downarrow|\rho|n;\downarrow\rangle\nonumber \\
 & + & \kappa\left(2\sqrt{m+1}\sqrt{n+1}\langle m+1;\downarrow|\rho|n+1;\downarrow\rangle-(m+n)\langle m;\downarrow|\rho|n;\downarrow\rangle\right)\\
\frac{d}{dt}\langle m;\uparrow|\rho|n;\downarrow\rangle & = & +\frac{1}{i\hbar}2\left(q_{r}k_{z}+\tilde{\delta}\right)\langle m;\uparrow|\rho|n;\downarrow\rangle\nonumber \\
 & + & \frac{1}{i\hbar}\frac{\Omega}{2}\left(\sqrt{m+1}\langle m+1;\downarrow|\rho|n;\downarrow\rangle-\sqrt{n}\langle m;\uparrow|\rho|n-1;\uparrow\rangle\right)\nonumber \\
 & + & \frac{1}{i\hbar}i\varepsilon_{p}\left(\sqrt{m}\langle m-1;\uparrow|\rho|n;\downarrow\rangle-\sqrt{m+1}\langle m+1;\uparrow|\rho|n;\downarrow\rangle-\sqrt{n+1}\langle m;\uparrow|\rho|n+1;\downarrow\rangle+\sqrt{n}\langle m;\uparrow|\rho|n-1;\downarrow\rangle\right)\nonumber \\
 & - & \frac{1}{i\hbar}\delta_{c}\left(m-n\right)\langle m;\uparrow|\rho|n;\downarrow\rangle\nonumber \\
 & + & \kappa\left(2\sqrt{m+1}\sqrt{n+1}\langle m+1;\uparrow|\rho|n+1;\downarrow\rangle-(m+n)\langle m;\uparrow|\rho|n;\downarrow\rangle\right)\\
\frac{d}{dt}\langle m;\downarrow|\rho|n;\uparrow\rangle & = & -\frac{1}{i\hbar}2\left(q_{r}k_{z}+\tilde{\delta}\right)\langle m;\downarrow|\rho|n;\uparrow\rangle\nonumber \\
 & + & \frac{1}{i\hbar}\frac{\Omega}{2}\left(\sqrt{m}\langle m-1;\uparrow|\rho|n;\uparrow\rangle-\sqrt{n+1}\langle m;\downarrow|\rho|n+1;\downarrow\rangle\right)\nonumber \\
 & + & \frac{1}{i\hbar}i\varepsilon_{p}\left(\sqrt{m}\langle m-1;\downarrow|\rho|n;\uparrow\rangle-\sqrt{m+1}\langle m+1;\downarrow|\rho|n;\uparrow\rangle-\sqrt{n+1}\langle m;\downarrow|\rho|n+1;\uparrow\rangle+\sqrt{n}\langle m;\downarrow|\rho|n-1;\uparrow\rangle\right)\nonumber \\
 & - & \frac{1}{i\hbar}\delta_{c}(m-n)\langle m;\downarrow|\rho|n;\uparrow\rangle\nonumber \\
 & + & \kappa\left(2\sqrt{m+1}\sqrt{n+1}\langle m+1;\downarrow|\rho|n+1;\uparrow\rangle-(m+n)\langle m;\downarrow|\rho|n;\uparrow\rangle\right)
\end{eqnarray}

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
In the code, I have defined the arrangement of state vector array order
 as
\begin_inset Formula 
\[
|0;\uparrow\rangle,|1;\uparrow\rangle,...,|N;\uparrow\rangle,|0;\downarrow\rangle,|1;\downarrow\rangle,...,|N;\downarrow\rangle
\]

\end_inset

, which is a total of 
\begin_inset Formula $2N+2$
\end_inset

 states.
 
\end_layout

\end_inset

Notationally, 
\begin_inset Formula 
\begin{equation}
[\rho_{mn}^{\sigma\sigma'}]_{(2N+2)\times(2N+2)}=\left(\begin{array}{cc}
[\rho_{mn}^{\uparrow\uparrow}]_{(N+1)\times(N+1)} & [\rho_{mn}^{\uparrow\downarrow}]_{(N+1)\times(N+1)}\\
{}[\rho_{mn}^{\downarrow\uparrow}]_{(N+1)\times(N+1)} & [\rho_{mn}^{\downarrow\downarrow}]_{(N+1)\times(N+1)}
\end{array}\right)
\end{equation}

\end_inset

In the column of 
\begin_inset Formula $[\rho_{mn}^{\sigma\sigma'}]_{(N+1)^{2}\times1}$
\end_inset

, the 
\begin_inset Formula $k$
\end_inset

th element is accessed as 
\begin_inset Formula $k=m(N+1)+(n+1)$
\end_inset

.
 Since we have finite truncation number 
\begin_inset Formula $N$
\end_inset

, we shall ignore terms involving 
\begin_inset Formula $|N+1;\sigma\rangle$
\end_inset

 or 
\begin_inset Formula $|-1;\sigma\rangle$
\end_inset

 generated by photon creation or annilation operators, as they either hit
 the ceiling or floor of our truncated Hilbert space.
 We then further write EOM of density matrix as
\begin_inset Formula 
\begin{equation}
\frac{d}{dt}\left(\begin{array}{c}
[\rho_{mn}^{\uparrow\uparrow}]_{(N+1)^{2}\times1}\\
{}[\rho_{mn}^{\uparrow\downarrow}]_{(N+1)^{2}\times1}\\
{}[\rho_{mn}^{\downarrow\uparrow}]_{(N+1)^{2}\times1}\\
{}[\rho_{mn}^{\downarrow\downarrow}]_{(N+1)^{2}\times1}
\end{array}\right)_{(2N+2)^{2}\times1}=\left(\begin{array}{cccc}
[M_{mn}^{\uparrow\uparrow}] & [S_{mn}^{1}] & [S_{mn}^{2}] & 0\\
{}[S_{mn}^{3}] & [M_{mn}^{\uparrow\downarrow}] & 0 & [S_{mn}^{4}]\\
{}[S_{mn}^{5}] & 0 & [M_{mn}^{\downarrow\uparrow}] & [S_{mn}^{6}]\\
0 & [S_{mn}^{7}] & [S_{mn}^{8}] & [M_{mn}^{\downarrow\downarrow}]
\end{array}\right)_{(2N+2)^{2}\times(2N+2)^{2}}\left(\begin{array}{c}
[\rho_{mn}^{\uparrow\uparrow}]\\
{}[\rho_{mn}^{\uparrow\downarrow}]\\
{}[\rho_{mn}^{\downarrow\uparrow}]\\
{}[\rho_{mn}^{\downarrow\downarrow}]
\end{array}\right)_{(2N+2)^{2}\times1}\label{eq:EOM_rho_matrix}
\end{equation}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
\begin_inset Formula 
\begin{eqnarray*}
\text{FirstTerm}\equiv & \langle m;p,\sigma|\int dz\psi_{\uparrow}^{\dagger}(z)\left(\frac{k_{z}^{2}}{2}+\frac{1}{2}z^{2}+q_{r}k_{z}+\delta\right)\psi_{\uparrow}(z)\rho|n;q,\sigma'\rangle\\
= & \langle m;p,\sigma|\int dz\sum_{p'}\varphi_{p'}^{\ast}(z)a_{p'\uparrow}^{\dagger}\left(H_{\text{osc}}+\delta-iq_{r}\frac{\partial}{\partial z}\right)\sum_{q'}\varphi_{q'}(z)a_{q'\uparrow}\rho|n;q\sigma'\rangle\\
= & \sum_{p'q'}\left[\int dz\varphi_{p'}^{\ast}(z)\left(H_{\text{osc}}+\delta-iq_{r}\frac{\partial}{\partial z}\right)\varphi_{q'}(z)\right]\langle m;p,\sigma|a_{p'\uparrow}^{\dagger}a_{q'\uparrow}\rho|n;q\sigma'\rangle\\
= & \sum_{p'q'}\left[(q'+\frac{1}{2}+\delta)\int dz\varphi_{p'}^{\ast}(z)\varphi_{q'}(z)-iq_{r}\int dz\varphi_{p'}^{\ast}(z)\frac{\partial}{\partial z}\varphi_{q'}(z)\right]\langle m;p,\sigma|a_{p'\uparrow}^{\dagger}a_{q'\uparrow}\rho|n;q\sigma'\rangle
\end{eqnarray*}

\end_inset

Easy to have 
\begin_inset Formula $\int dz\varphi_{p'}^{\ast}(z)\varphi_{q'}(z)=\delta_{p'q'}$
\end_inset

 but more steps to follow for 
\begin_inset Formula $-iq_{r}\int dz\varphi_{p'}^{\ast}(z)\frac{\partial}{\partial z}\varphi_{q'}(z)$
\end_inset

.
 From 
\begin_inset Formula 
\[
\varphi_{q}(z)=\mathcal{A}_{q}H_{q}(z)e^{-\frac{z^{2}}{2}},\quad\mathcal{A}_{q}=\frac{1}{\sqrt{2^{q}q!}}\frac{1}{\pi^{1/4}}.
\]

\end_inset

where 
\begin_inset Formula $H_{q}(z)$
\end_inset

 is the Hermite polynomials, we have 
\begin_inset Formula 
\begin{eqnarray*}
-i\frac{\partial}{\partial z}\varphi_{q}(z) & = & -i\mathcal{A}_{q}e^{-\frac{z^{2}}{2}}\left(H_{q}'(z)-zH_{q}(z)\right)\\
 & = & -i\mathcal{A}_{q}e^{-\frac{z^{2}}{2}}\left(2qH_{q-1}(z)-zH_{q}(z)\right)\\
 & = & -i\mathcal{A}_{q}e^{-\frac{z^{2}}{2}}\left(2qH_{q-1}(z)-\frac{1}{2}(H_{q+1}(z)+2qH_{q-1}(z))\right)\\
 & = & -i\mathcal{A}_{q}e^{-\frac{z^{2}}{2}}\left(qH_{q-1}(z)-\frac{1}{2}H_{q+1}(z)\right)\\
 & = & -i\left(q\frac{\mathcal{A}_{q}}{\mathcal{A}_{q-1}}\varphi_{q-1}(z)-\frac{1}{2}\frac{\mathcal{A}_{q}}{\mathcal{A}_{q+1}}\varphi_{q+1}(z)\right)\\
 & = & -i\left(\sqrt{\frac{q}{2}}\varphi_{q-1}(z)-\sqrt{\frac{q+1}{2}}\varphi_{q+1}(z)\right)
\end{eqnarray*}

\end_inset

where we have used recurrence relation for Hermite polynomials, including
 
\begin_inset Formula $H_{n}'(x)=2nH_{n-1}(x)$
\end_inset

 or 
\begin_inset Formula $H_{n+1}(x)=2xH_{n}(x)-H_{n}'(x)$
\end_inset

 and 
\begin_inset Formula $H_{n+1}(x)=2xH_{n}(x)-2nH_{n-1}(x)$
\end_inset

.
 The above result is equivalent to replace 
\begin_inset Formula $k_{z}=\frac{1}{\sqrt{2}i}(a-a^{\dagger})$
\end_inset

 and operate it on the wavefunction 
\begin_inset Formula $\varphi_{p}(z)$
\end_inset

, namely in one line we can prove,
\begin_inset Formula 
\begin{eqnarray*}
k_{z}\varphi_{q'}(z) & = & \frac{1}{\sqrt{2}i}(a-a^{\dagger})\varphi_{q'}(z)\\
 & = & -i\frac{1}{\sqrt{2}}\left(\sqrt{q'}\varphi_{q'-1}(z)-\sqrt{q'+1}\varphi_{q'+1}(z)\right)
\end{eqnarray*}

\end_inset

Then, we should have 
\begin_inset Formula $-iq_{r}\int dz\varphi_{p'}^{\ast}(z)\frac{\partial}{\partial z}\varphi_{q'}(z)=-iq_{r}\sqrt{\frac{1}{2}}\int dz\varphi_{p'}^{\ast}(z)(\sqrt{q'}\varphi_{q'-1}(z)-\sqrt{q'+1}\varphi_{q'+1}(z))=-iq_{r}\sqrt{\frac{1}{2}}(\sqrt{q'}\delta_{p',q'-1}-\sqrt{q'+1}\delta_{p',q'+1})$
\end_inset

.
 Also, note that 
\begin_inset Formula 
\begin{eqnarray*}
\langle m;p,\sigma|a_{p'\uparrow}^{\dagger}a_{q'\uparrow}\rho|n;q\sigma'\rangle & = & \delta_{p',p}\delta_{\sigma,\uparrow}\langle m;\text{vac}|a_{q'\uparrow}\rho|n;q\sigma'\rangle\\
 & = & \delta_{p',p}\delta_{\sigma,\uparrow}\langle m;q'\uparrow|\rho|n;q\sigma'\rangle\\
 & = & \delta_{p',p}\delta_{\sigma,\uparrow}\rho_{mn}^{q'\sigma q\sigma'}
\end{eqnarray*}

\end_inset

To avoid confusion, we have to point out one subtle difference between 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $a_{q\sigma}$
\end_inset

, where 
\begin_inset Formula $a$
\end_inset

 is the lowering operator for the harmonic oscillator state and 
\begin_inset Formula $a_{q\sigma}$
\end_inset

 is the atom number annhilation operator at oscillator state 
\begin_inset Formula $q$
\end_inset

 and spin 
\begin_inset Formula $\sigma$
\end_inset

.
 Thus 
\begin_inset Formula $a\varphi_{q}(z)=\sqrt{q}\varphi_{q-1}(z)$
\end_inset

, but 
\begin_inset Formula $a_{q\sigma}|n;p\sigma'\rangle=\delta_{q,p}\delta_{\sigma,\sigma'}|n;\text{vac}\rangle$
\end_inset

 and there is no 
\begin_inset Formula $\sqrt{p}$
\end_inset

 term as a prefactor! Wrapping it up, the first term is massaged into 
\begin_inset Formula 
\begin{eqnarray*}
 & \delta_{\sigma,\uparrow}\sum_{p'q'}\left[\left(q'+\frac{1}{2}+\delta\right)\delta_{p'q'}-\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{q'}\delta_{p',q'-1}-\sqrt{q'+1}\delta_{p',q'+1}\right)\right]\delta_{p',p}\rho_{mn}^{q'\sigma q\sigma'}\\
= & \left(p+\frac{1}{2}+\delta\right)\rho_{mn}^{p\uparrow q\sigma'}-\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{p+1}\rho_{mn}^{(p+1)\uparrow q\sigma'}-\sqrt{p}\rho_{mn}^{(p-1)\uparrow q\sigma'}\right)
\end{eqnarray*}

\end_inset

and the rest of terms could be followed similarly.
 
\begin_inset Formula 
\[
-\langle m;p,\sigma|\int dz\rho\psi_{\uparrow}^{\dagger}(z)\left(\frac{k_{z}^{2}}{2m}+\frac{1}{2}m\omega^{2}z^{2}+\frac{q_{r}k_{z}}{m}+\delta\right)\psi_{\uparrow}(z)|n;q,\sigma'\rangle=-\left(q+\frac{1}{2}+\delta\right)\rho_{mn}^{p\sigma q\uparrow}+\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{q}\rho_{mn}^{p\sigma(q-1)\uparrow}-\sqrt{q+1}\rho_{mn}^{p\sigma(q+1)\uparrow}\right)
\]

\end_inset


\begin_inset Formula 
\[
\langle m;p,\sigma|\int dz\psi_{\downarrow}^{\dagger}(z)\left(\frac{k_{z}^{2}}{2m}+\frac{1}{2}m\omega^{2}z^{2}-\frac{q_{r}k_{z}}{m}-\delta\right)\psi_{\downarrow}(z)\rho|n;q,\sigma'\rangle=\left(p+\frac{1}{2}-\delta\right)\rho_{mn}^{p\downarrow q\sigma'}+\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{p+1}\rho_{mn}^{(p+1)\downarrow q\sigma'}-\sqrt{p}\rho_{mn}^{(p-1)\downarrow q\sigma'}\right)
\]

\end_inset


\begin_inset Formula 
\[
-\langle m;p,\sigma|\int dz\rho\psi_{\downarrow}^{\dagger}(z)\left(\frac{k_{z}^{2}}{2m}+\frac{1}{2}m\omega^{2}z^{2}-\frac{q_{r}k_{z}}{m}-\delta\right)\psi_{\downarrow}(z)|n;q,\sigma'\rangle=-\left(q+\frac{1}{2}-\delta\right)\rho_{mn}^{p\sigma q\downarrow}-\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{q}\rho_{mn}^{p\sigma(q-1)\downarrow}-\sqrt{q+1}\rho_{mn}^{p\sigma(q+1)\downarrow}\right)
\]

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\langle m;p,\sigma|\frac{\Omega}{2}\int dz\left(\psi_{\uparrow}^{\dagger}(z)\psi_{\downarrow}(z)c\rho+c^{\dagger}\psi_{\downarrow}^{\dagger}(z)\psi_{\uparrow}(z)\rho-\rho\psi_{\uparrow}^{\dagger}(z)\psi_{\downarrow}(z)c-\rho c^{\dagger}\psi_{\downarrow}^{\dagger}(z)\psi_{\uparrow}(z)\right)|n;q,\sigma'\rangle=\frac{\Omega}{2}\sum_{p'q'}\int dz\varphi_{p'}^{\ast}(z)\varphi_{q'}(z)\times\\
\left[\langle m;p,\sigma|a_{p'\uparrow}^{\dagger}a_{q'\downarrow}c\rho|n;q\sigma'\rangle+\langle m;p,\sigma|c^{\dagger}a_{p'\downarrow}^{\dagger}a_{q'\uparrow}\rho|n;q\sigma'\rangle-\langle m;p,\sigma|\rho a_{p'\uparrow}^{\dagger}a_{q'\downarrow}c|n;q\sigma'\rangle-\langle m;p,\sigma|\rho c^{\dagger}a_{p'\downarrow}^{\dagger}a_{q'\uparrow}|n;q\sigma'\rangle\right] & =\\
\frac{\Omega}{2}\sum_{p'q'}\delta_{p'q'}\left[\sqrt{m+1}\delta_{pp'}\delta_{\sigma\uparrow}\rho_{(m+1)n}^{q'\downarrow q\sigma'}+\sqrt{m}\delta_{pp'}\delta_{\sigma\downarrow}\rho_{(m-1)n}^{q'\uparrow q\sigma'}-\sqrt{n}\delta_{qq'}\delta_{\sigma'\downarrow}\rho_{m(n-1)}^{p\sigma p'\uparrow}-\sqrt{n+1}\delta_{qq'}\delta_{\sigma'\uparrow}\rho_{m(n+1)}^{p\sigma p'\downarrow}\right] & = & \frac{\Omega}{2}\times\\
\sqrt{m+1}\delta_{\sigma\uparrow}\rho_{(m+1)n}^{p\downarrow q\sigma'}+\sqrt{m}\delta_{\sigma\downarrow}\rho_{(m-1)n}^{p\uparrow q\sigma'}-\sqrt{n}\delta_{\sigma'\downarrow}\rho_{m(n-1)}^{p\sigma q\uparrow}-\sqrt{n+1}\delta_{\sigma'\uparrow}\rho_{m(n+1)}^{p\sigma q\downarrow}
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\begin{eqnarray*}
\langle m;p,\sigma|i\varepsilon_{p}\left(c^{\dagger}\rho-c\rho-\rho c^{\dagger}+\rho c\right)-\delta_{c}\left(c^{\dagger}c\rho-\rho c^{\dagger}c\right)|n;q,\sigma'\rangle & =\\
i\varepsilon_{p}\left(\sqrt{m}\rho_{(m-1)n}^{p\sigma q\sigma'}-\sqrt{m+1}\rho_{(m+1)n}^{p\sigma q\sigma'}-\sqrt{n+1}\rho_{m(n+1)}^{p\sigma q\sigma'}+\sqrt{n}\rho_{m(n-1)}^{p\sigma q\sigma'}\right)-\delta_{c}\left(m-n\right)\rho_{mn}^{p\sigma q\sigma'}
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\[
\kappa\langle m;p,\sigma|(2c\rho c^{\dagger}-c^{\dagger}c\rho-\rho c^{\dagger}c)|n;q,\sigma'\rangle=\kappa\left(2\sqrt{m+1}\sqrt{n+1}\rho_{(m+1)(n+1)}^{p\sigma q\sigma'}-(m+n)\rho_{mn}^{p\sigma q\sigma'}\right)
\]

\end_inset

With above preparations, we write master equation Eq.
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit

\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rho_master"

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
 as, 
\begin_inset Formula 
\begin{eqnarray}
\frac{d}{dt}\rho_{mn}^{p\sigma q\sigma'} & = & \frac{1}{i}\left[\left(p+\frac{1}{2}+\delta\right)\rho_{mn}^{p\uparrow q\sigma'}-\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{p+1}\rho_{mn}^{(p+1)\uparrow q\sigma'}-\sqrt{p}\rho_{mn}^{(p-1)\uparrow q\sigma'}\right)\right]\nonumber \\
 & + & \frac{1}{i}\left[-\left(q+\frac{1}{2}+\delta\right)\rho_{mn}^{p\sigma q\uparrow}+\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{q}\rho_{mn}^{p\sigma(q-1)\uparrow}-\sqrt{q+1}\rho_{mn}^{p\sigma(q+1)\uparrow}\right)\right]\nonumber \\
 & + & \frac{1}{i}\left[\left(p+\frac{1}{2}-\delta\right)\rho_{mn}^{p\downarrow q\sigma'}+\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{p+1}\rho_{mn}^{(p+1)\downarrow q\sigma'}-\sqrt{p}\rho_{mn}^{(p-1)\downarrow q\sigma'}\right)\right]\nonumber \\
 & + & \frac{1}{i}\left[-\left(q+\frac{1}{2}-\delta\right)\rho_{mn}^{p\sigma q\downarrow}-\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{q}\rho_{mn}^{p\sigma(q-1)\downarrow}-\sqrt{q+1}\rho_{mn}^{p\sigma(q+1)\downarrow}\right)\right]\nonumber \\
 & + & \frac{\Omega}{2}\frac{1}{i}\left[\sqrt{m+1}\delta_{\sigma\uparrow}\rho_{(m+1)n}^{p\downarrow q\sigma'}+\sqrt{m}\delta_{\sigma\downarrow}\rho_{(m-1)n}^{p\uparrow q\sigma'}-\sqrt{n}\delta_{\sigma'\downarrow}\rho_{m(n-1)}^{p\sigma q\uparrow}-\sqrt{n+1}\delta_{\sigma'\uparrow}\rho_{m(n+1)}^{p\sigma q\downarrow}\right]\nonumber \\
 & + & \varepsilon_{p}\left(\sqrt{m}\rho_{(m-1)n}^{p\sigma q\sigma'}-\sqrt{m+1}\rho_{(m+1)n}^{p\sigma q\sigma'}-\sqrt{n+1}\rho_{m(n+1)}^{p\sigma q\sigma'}+\sqrt{n}\rho_{m(n-1)}^{p\sigma q\sigma'}\right)\nonumber \\
 & + & i\delta_{c}\left(m-n\right)\rho_{mn}^{p\sigma q\sigma'}+\kappa\left(2\sqrt{m+1}\sqrt{n+1}\rho_{(m+1)(n+1)}^{p\sigma q\sigma'}-(m+n)\rho_{mn}^{p\sigma q\sigma'}\right)\label{eq:rho_master_full}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Following the previous work, we define 
\begin_inset Formula 
\begin{equation}
[\rho_{mn}^{p\sigma q\sigma'}]_{(2N+2)(Q+1)\times(2N+2)(Q+1)}=\left(\begin{array}{cc}
[\rho_{mn}^{p\uparrow q\uparrow}]_{(N+1)(Q+1)\times(N+1)(Q+1)} & [\rho_{mn}^{p\uparrow q\downarrow}]_{(N+1)(Q+1)\times(N+1)(Q+1)}\\{}
[\rho_{mn}^{p\downarrow q\uparrow}]_{(N+1)(Q+1)\times(N+1)(Q+1)} & [\rho_{mn}^{p\downarrow q\downarrow}]_{(N+1)(Q+1)\times(N+1)(Q+1)}
\end{array}\right)\label{eq:matrix_form_rho}
\end{equation}

\end_inset

We columnize the matrix array by array.
 For instance, in the column of 
\begin_inset Formula $[\rho_{mn}^{p\uparrow q\uparrow}]_{(N+1)^{2}Q^{2}\times1}$
\end_inset

, the 
\begin_inset Formula $k$
\end_inset

th element is accessed as 
\begin_inset Formula $k=m(N+1)(Q+1)^{2}+n(Q+1)^{2}+p(Q+1)+q+1$
\end_inset

 where 
\begin_inset Formula $m,n=0,1,2,...N$
\end_inset

 and 
\begin_inset Formula $p,q=0,1,2,...Q$
\end_inset

.
 We then further write EOM of density matrix as
\begin_inset Formula 
\begin{equation}
[\rho]=\left(\begin{array}{c}
[\rho_{mn}^{p\uparrow q\uparrow}]_{(N+1)(Q+1)\times(N+1)(Q+1)}\\{}
[\rho_{mn}^{p\uparrow q\downarrow}]_{(N+1)(Q+1)\times(N+1)(Q+1)}\\{}
[\rho_{mn}^{p\downarrow q\uparrow}]_{(N+1)(Q+1)\times(N+1)(Q+1)}\\{}
[\rho_{mn}^{p\downarrow q\downarrow}]_{(N+1)(Q+1)\times(N+1)(Q+1)}
\end{array}\right)_{(2N+2)^{2}(Q+1)^{2}\times1}\label{eq:columnized_vector_rho}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\frac{d}{dt}[\rho]=\left(\begin{array}{cccc}
[M_{mn}^{p\uparrow q\uparrow}] & [S_{mn}^{1pq}] & [S_{mn}^{2pq}] & 0\\
{}[S_{mn}^{3pq}] & [M_{mn}^{p\uparrow q\downarrow}] & 0 & [S_{mn}^{4pq}]\\
{}[S_{mn}^{5pq}] & 0 & [M_{mn}^{p\downarrow q\uparrow}] & [S_{mn}^{6pq}]\\
0 & [S_{mn}^{7pq}] & [S_{mn}^{8pq}] & [M_{mn}^{p\downarrow q\downarrow}]
\end{array}\right)_{(2N+2)^{2}(Q+1)^{2}\times(2N+2)^{2}(Q+1)^{2}}[\rho]\label{eq:EOM_rho_matrix-1}
\end{equation}

\end_inset

We denote the RHS matrix of Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EOM_rho_matrix-1"

\end_inset

 as 
\begin_inset Formula $A$
\end_inset

 in the code, and we access the element 
\begin_inset Formula $(i,j)$
\end_inset

 as 
\begin_inset Formula $i=(N+1)^{2}(Q+1)^{2}r+m(N+1)(Q+1)^{2}+n(Q+1)^{2}+p(Q+1)+q+1$
\end_inset

 (Note: MATLAB index starts from 1 and C++ code index starts from 0, so
 attention should be paid here for the final value of 1.
 No such value is needed in C++) where 
\begin_inset Formula $r,c=0,1,2,3$
\end_inset

, 
\begin_inset Formula $m,n=0,1,2,...N$
\end_inset

 and 
\begin_inset Formula $p,q=0,1,2,...Q$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
To benchmark the results, we first consider the case without pumping and
 decay, with zero photon inside the cavity and atom being the excited state.
 
\end_layout

\begin_layout Itemize
If we further set 
\begin_inset Formula $q_{r}=0$
\end_inset

, then orbital degree becomes a good quantum number.
 In this simplified case, we have the small subspace 
\begin_inset Formula $\{|n,q,\sigma\rangle\}$
\end_inset

 where 
\begin_inset Formula $n=0,1$
\end_inset

 and 
\begin_inset Formula $\sigma=\uparrow,\downarrow$
\end_inset

, 
\begin_inset Formula $q$
\end_inset

 is only a constant number.
 We use simplified notation of density operator and write the master equation
 as, 
\begin_inset Formula 
\begin{eqnarray*}
\frac{d}{dt}\rho_{mn}^{q\sigma q\sigma'} & = & \frac{1}{i}\left[\left(q+\frac{1}{2}+\delta\right)\rho_{mn}^{q\uparrow q\sigma'}-\left(q+\frac{1}{2}+\delta\right)\rho_{mn}^{q\sigma q\uparrow}+\left(q+\frac{1}{2}-\delta\right)\rho_{mn}^{q\downarrow q\sigma'}-\left(q+\frac{1}{2}-\delta\right)\rho_{mn}^{q\sigma q\downarrow}\right]\\
 & + & \frac{\Omega}{2}\frac{1}{i}\left[\sqrt{m+1}\delta_{\sigma\uparrow}\rho_{(m+1)n}^{p\downarrow q\sigma'}+\sqrt{m}\delta_{\sigma\downarrow}\rho_{(m-1)n}^{p\uparrow q\sigma'}-\sqrt{n}\delta_{\sigma'\downarrow}\rho_{m(n-1)}^{p\sigma q\uparrow}-\sqrt{n+1}\delta_{\sigma'\uparrow}\rho_{m(n+1)}^{p\sigma q\downarrow}\right]
\end{eqnarray*}

\end_inset

Due to conservation of excitation number, the Hilbert space is further reduced
 to the smaller subspace.
 For instance, if we have 
\begin_inset Formula $|N-1,q,\uparrow\rangle$
\end_inset

 as initial state, then we would only have population in another state 
\begin_inset Formula $|N,q,\downarrow\rangle$
\end_inset

 and these two states lead to four elements of density matrix and in solving
 the master equation, we are dealing with 4 by 4 ODE time evolution for
 
\begin_inset Formula $N=1$
\end_inset

,
\begin_inset Formula 
\begin{equation}
\frac{d}{dt}\left(\begin{array}{c}
\rho_{00}^{q\uparrow q\uparrow}\\
\rho_{01}^{q\uparrow q\downarrow}\\
\rho_{10}^{q\downarrow q\uparrow}\\
\rho_{11}^{q\downarrow q\downarrow}
\end{array}\right)=\left(\begin{array}{cccc}
0 & -\frac{\Omega}{2i} & \frac{\Omega}{2i} & 0\\
-\frac{\Omega}{2i} & \frac{2\delta}{i} & 0 & \frac{\Omega}{2i}\\
\frac{\Omega}{2i} & 0 & -\frac{2\delta}{i} & -\frac{\Omega}{2i}\\
0 & \frac{\Omega}{2i} & -\frac{\Omega}{2i} & 0
\end{array}\right)\left(\begin{array}{c}
\rho_{00}^{q\uparrow q\uparrow}\\
\rho_{01}^{q\uparrow q\downarrow}\\
\rho_{10}^{q\downarrow q\uparrow}\\
\rho_{11}^{q\downarrow q\downarrow}
\end{array}\right)
\end{equation}

\end_inset

and for arbitrary 
\begin_inset Formula $N\ge1$
\end_inset

, 
\begin_inset Formula 
\begin{equation}
\frac{d}{dt}\left(\begin{array}{c}
\rho_{N-1,N-1}^{q\uparrow q\uparrow}\\
\rho_{N-1,N}^{q\uparrow q\downarrow}\\
\rho_{N,N-1}^{q\downarrow q\uparrow}\\
\rho_{N,N}^{q\downarrow q\downarrow}
\end{array}\right)=\left(\begin{array}{cccc}
0 & -\frac{\Omega}{2i}\sqrt{N} & \frac{\Omega}{2i}\sqrt{N} & 0\\
-\frac{\Omega}{2i}\sqrt{N} & \frac{2\delta}{i} & 0 & \frac{\Omega}{2i}\sqrt{N}\\
\frac{\Omega}{2i}\sqrt{N} & 0 & -\frac{2\delta}{i} & -\frac{\Omega}{2i}\sqrt{N}\\
0 & \frac{\Omega}{2i}\sqrt{N} & -\frac{\Omega}{2i}\sqrt{N} & 0
\end{array}\right)\left(\begin{array}{c}
\rho_{N-1,N-1}^{q\uparrow q\uparrow}\\
\rho_{N-1,N}^{q\uparrow q\downarrow}\\
\rho_{N,N-1}^{q\downarrow q\uparrow}\\
\rho_{N,N}^{q\downarrow q\downarrow}
\end{array}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
Also, we can consider case when 
\begin_inset Formula $q_{r}\neq0$
\end_inset

 but 
\begin_inset Formula $\Omega=0$
\end_inset

.
 In this case, excitation number is still a good quantum number but different
 oscillator 
\begin_inset Formula $q$
\end_inset

 is coupled.
 The master equation is written as,
\begin_inset Formula 
\begin{eqnarray*}
\frac{d}{dt}\rho_{00}^{p\uparrow q\uparrow} & = & \frac{1}{i}\left[\left(p+\frac{1}{2}+\delta\right)\rho_{00}^{p\uparrow q\uparrow}-\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{p+1}\rho_{00}^{(p+1)\uparrow q\uparrow}-\sqrt{p}\rho_{00}^{(p-1)\uparrow q\uparrow}\right)\right]\\
 & + & \frac{1}{i}\left[-\left(q+\frac{1}{2}+\delta\right)\rho_{00}^{p\uparrow q\uparrow}+\frac{iq_{r}}{\sqrt{2}}\left(\sqrt{q}\rho_{00}^{p\uparrow(q-1)\uparrow}-\sqrt{q+1}\rho_{00}^{p\uparrow(q+1)\uparrow}\right)\right]
\end{eqnarray*}

\end_inset

where we only need to consider Hilbert space spanned by 
\begin_inset Formula $|0,q,\uparrow\rangle$
\end_inset

 and 
\begin_inset Formula $q=0,1,2,...,Q$
\end_inset

 (if we choose initial state as zero photon and up spin and lowest oscillator
 state)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EOM_rho_matrix-1"

\end_inset

 together with the normalization condition 
\begin_inset Formula $\text{Tr}[\rho]=1$
\end_inset

 makes the steady state solution 
\begin_inset Formula $\frac{d}{dt}\rho(t)=0$
\end_inset

 an over-determined problem.
 What we do in the MATLAB and C++ code is to put the first row of matrix
 
\begin_inset Formula $A$
\end_inset

 satisfy the condition 
\begin_inset Formula $\text{Tr}[\rho]=1$
\end_inset

, which is explicitly written as 
\begin_inset Formula $\sum_{m=0}^{N}\sum_{p=0}^{Q}\sum_{\sigma=\pm}\rho_{mm}^{p\sigma p\sigma}=1$
\end_inset

.
 What we have from Master Equation derivation in Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rho_master_full"

\end_inset

 is to relate every index in matrix 
\begin_inset Formula $\rho_{mn}^{p\sigma q\sigma'}$
\end_inset

 with their 
\begin_inset Quotes eld
\end_inset

neighering part
\begin_inset Quotes erd
\end_inset

, such as 
\begin_inset Formula $\rho_{m(n+1)}^{p\sigma q\sigma'}$
\end_inset

 etc.
 It is then natural to take advantage of the zeros in the matrix and their
 location.
 To exploit sparsity in solveing the general sparse linear system is to
 be economical in terms of both storage and computational effort.
 To visualize the sparse pattern of the matrix in Fig.
 1, we use spy() function in MATLAB to view a matrix with cutoff chosen
 as 
\begin_inset Formula $N=2$
\end_inset

 and 
\begin_inset Formula $Q=2$
\end_inset

 before and after imposing the normalization condition.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename src_trap/sparse_view_1.eps
	scale 50

\end_inset


\begin_inset Graphics
	filename src_trap/sparse_view_2.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sparse view of the matrix pattern, before and after adding the normalization
 condition.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Given the relation written in Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:rho_master_full"

\end_inset

, we need to convert the language into C++ array form, which turns out to
 be a nontrivial task (total of two weeks coding/testing/debugging time).
 In short, it is essential to decompose a given row index in columnized
 vector Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:columnized_vector_rho"

\end_inset

 into correct corresponding 
\begin_inset Formula $\{m,n,p,q,\sigma\}$
\end_inset

 values.
 To achieve this goal, we use floor function (By definition, floor(x) Rounds
 x downward, returning the largest integral value that is not greater than
 x.
 ) in both MATLAB and C++ in Algorithm 1.
 It can be checked straightforwardly, that the first index is 0(1) for 
\begin_inset Formula $m=n=p=q=0$
\end_inset

 in C++(MATLAB) code, and the last index is 
\begin_inset Formula $N(N+1)(Q+1)^{2}+N(Q+1)^{2}+Q(Q+1)+Q=4(N+1)^{2}(Q+1)^{2}-1$
\end_inset

 for C++ code or 
\begin_inset Formula $N(N+1)(Q+1)^{2}+N(Q+1)^{2}+Q(Q+1)+Q+1=4(N+1)^{2}(Q+1)^{2}$
\end_inset

 for MATLAB code, which 
\begin_inset Quotes eld
\end_inset

fits right into the box
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Mapping between global columnized vector and block and sub-block form of
 density operator
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Here, we show the correspondence used in C++ code.
 Denote 
\begin_inset Formula $\text{irow}=r(N+1)^{2}(Q+1)^{2}+k$
\end_inset

 and 
\begin_inset Formula $k=m(N+1)(Q+1)^{2}+n(Q+1)^{2}+p(Q+1)+q$
\end_inset

:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $r$
\end_inset

 runs from 
\begin_inset Formula $0$
\end_inset

 to 
\begin_inset Formula $3$
\end_inset

, corresponding to 
\begin_inset Formula $\rho^{\uparrow\uparrow}$
\end_inset

, 
\begin_inset Formula $\rho^{\uparrow\downarrow}$
\end_inset

,
\begin_inset Formula $\rho^{\downarrow\uparrow}$
\end_inset

,
\begin_inset Formula $\rho^{\downarrow\downarrow}$
\end_inset

.
 
\begin_inset Formula $r=\text{floor}(\frac{\text{irow}}{(N+1)^{2}(Q+1)^{2}})$
\end_inset

;
\end_layout

\begin_layout Enumerate
\begin_inset Formula $k=\text{irow}-r$
\end_inset

;
\end_layout

\begin_layout Enumerate
\begin_inset Formula $m=\text{floor}(\frac{k}{(N+1)(Q+1)^{2}})$
\end_inset

;
\end_layout

\begin_layout Enumerate
\begin_inset Formula $n=\text{floor}(\frac{k-m(N+1)(Q+1)^{2})}{(Q+1)^{2}})$
\end_inset

;
\end_layout

\begin_layout Enumerate
\begin_inset Formula $p=\text{floor}(\frac{k-m(N+1)(Q+1)^{2}-n(Q+1)^{2}}{Q+1})$
\end_inset

;
\end_layout

\begin_layout Enumerate
\begin_inset Formula $q=k-m(N+1)(Q+1)^{2}-n(Q+1)^{2}-p(Q+1)$
\end_inset

.
\end_layout

\begin_layout Plain Layout
The rule behind this mapping is, we 
\end_layout

\begin_layout Enumerate
arrange density matrix written in Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:matrix_form_rho"

\end_inset

 as block rectangular form of [
\begin_inset Formula $\rho^{\uparrow\uparrow}$
\end_inset

, 
\begin_inset Formula $\rho^{\uparrow\downarrow}$
\end_inset

,
\begin_inset Formula $\rho^{\downarrow\uparrow}$
\end_inset

,
\begin_inset Formula $\rho^{\downarrow\downarrow}$
\end_inset

]
\begin_inset Formula $^{T}$
\end_inset

;
\end_layout

\begin_layout Enumerate
loop over photon number index 
\begin_inset Formula $m$
\end_inset

 and 
\begin_inset Formula $n$
\end_inset

from 0 to 
\begin_inset Formula $N$
\end_inset

 as a row major priority;
\end_layout

\begin_layout Enumerate
loop over orbital number index 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $q$
\end_inset

 from 0 to 
\begin_inset Formula $Q$
\end_inset

 as a row major priority.
 
\end_layout

\begin_layout Plain Layout
Note, for MATLAB code, row index starts from 1, so we need to add one to
 the q value.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the parallized C++ code, we distribute the long columnized vector (size
 of 
\begin_inset Formula $4(N+1)^{2}(Q+1)^{2}$
\end_inset

 by 
\begin_inset Formula $1$
\end_inset

) of density operator into hundreds or even thousands cores of CPU, and
 each CPU communicates with one another collectively via Message Passing
 Interface (MPI) to handle the portable and scalable large-scale parallel
 sparse linear algebra application.
 Of course, the matrix construction and operations are interfaced with PETSc,
 which is 
\begin_inset Quotes eld
\end_inset

a suite of data structures and routines for the scalable (parallel) solution
 of scientific applications modeled by partial differential equations
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
We first developed MATLAB code with dense matrix construction, which is
 inherited from previous published work [Atoms 2015, 3(2), 182-194, http://www.md
pi.com/2218-2004/3/2/182], and benchmarked the physics in limiting cases
 where we know it has to work based on Mean Field Theory (which is a lot
 less computationally intensive).
 Then we are motivated to develop high performance C++ code by the fact
 that in the MATLAB prototype of code, it can only handle at most the cutoff
 value of 
\begin_inset Formula $N=5$
\end_inset

 and 
\begin_inset Formula $Q=5$
\end_inset

 in our 12GB and 6-cores workstation.
 Then we researched the open source market of available library solvers,
 and found out PETSc stands out as one of the best platform to deliver high
 performance solver and preconditioner algorithms.
\end_layout

\begin_layout Standard
For matrix from small to intermediate size, the matrix can be decomposed
 into lower and upper (LU) triangular decomposition, leading to direct-solver
 techniques.
 The advantage of the direct-solver approach is that once the decomposition
 is performed, it is efficiently to solve for multiple parameters using
 forward and backward substitutions, if the sparse pattern of the matrix
 remains unchanged.
 However, the time and memory complexities of LU factorization and its limited
 scalability on large-scale distributed memory platforms prevent use of
 the approach for large-scale problems.
 
\end_layout

\begin_layout Standard
Among all of these possible approaches, the iterative-solver approach theoretica
lly has the best time complexity (here, “complexity” denotes how the computation
al cost of an algorithm grows with the size of the computational domain)
 if the number of iterations is independent of the physical parameters.
 For problems of substantial size, preallocation of matrix memory is crucial
 for attaining good performance.
 We form one vector from scratch, duplicate as needed and let PETSc decide
 how many elements of the vector are stored on each processor, by identifying
 the starting and ending mesh points on each processor for the interior
 part of the mesh.
 Scaling up, we need to deploy the sparse format of the matrix and thus,
 a map that links back to dense matrix form for debugging purpose.
 Following Compressed Row Storage (CRS) convention, we pass in 
\begin_inset Quotes eld
\end_inset

local
\begin_inset Quotes erd
\end_inset

 size of the created vector to access each row of the sparse matrix and
 force the same parallel layout as the vector created above.
 Using PETSc interface, the matrix format can be specified at runtime.
 The linear system is distributed across the processors by chunks of contiguous
 rows, which correspond to contiguous sections of the mesh on which the
 problem is discretized.
 For matrix assembly, each processor contributes entries for the part that
 it owns locally.
 In doing this, we loop over the global row index that is owned by the local
 processor, and assign nonzero values at computed column indices according
 to Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EOM_rho_matrix-1"

\end_inset

 and Algorithm 1.
 The matrix construction is essentially done in parallel and has been tested
 to achieve good efficiency.
 
\end_layout

\begin_layout Standard
After the code is finished with matrix construction, we deploy the object-orient
ed strategy used in PETSc linear solver context and set various options
 by default and/or at runtime.
 Most of the existing practical iterative techniques for solving large linear
 system of equations utilize a projection process in one way or another.
 A projection process represents a canonical way of extracting an approximation
 to the solution of a linear system from a subspace.
 The matrix we concern about is non-hermitian, and thus has strongly indefinite
 eigen-spectrum, which is known to be difficult to converge for Krylov iterative
 solvers without appropriately choosing preconditioners.
 It is possible to convert a non-hermitian matrix into a hermition one in
 theory.
 One such technique solves the equivalent linear system 
\begin_inset Formula $A^{\dagger}Ax=A^{\dagger}b$
\end_inset

 which is called the normal equation, where 
\begin_inset Formula $\dagger$
\end_inset

 denotes complex conjugate transposition.
 The coefficient matrix 
\begin_inset Formula $A^{\dagger}A$
\end_inset

 immediately becomes symmetric positive definite (SPD) and one can exploit
 highly successful Conjugate Gradient or Lanczos solvers.
 However, in practice, the coefficient matrix 
\begin_inset Formula $A^{\dagger}A$
\end_inset

 becomes much denser and less well-conditioned than the original matrix
 
\begin_inset Formula $A$
\end_inset

.
 The general consensus is that solving the normal equations can be an inefficien
t approach in the case when 
\begin_inset Formula $A$
\end_inset

 is poorly conditioned, but perhaps only in the extreme case when 
\begin_inset Formula $A$
\end_inset

 is unitary, i.e.
 
\begin_inset Formula $A^{\dagger}A=I$
\end_inset

 then the normal equation is clearly the best approach (the Conjugate Gradient
 method will converge in zero step).
\end_layout

\begin_layout Standard
We turn our major attention to the proper choice of combination in Krylov
 subspace solvers and preconditioning matrix.
 Preconditioning is a key ingredient for the success of Krylov subspace
 methods in most cases, since the lack of robustness is a widely recognized
 weakness of iterative solvers relative to direct solvers.
 Indeed, finding a good preconditioner to solve a given sparse linear system
 is often viewed as a combination of art and science.
 
\end_layout

\end_body
\end_document
